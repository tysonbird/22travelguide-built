{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./src/pages/things-to-do-in-texas/index.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./src/gatsby-theme-carbon/templates/Default.js"],"names":["module","exports","_frontmatter","makeShortcode","name","props","console","warn","PageDescription","Row","Column","SimpleSearch","AdGroup","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","colSm","colMd","colLg","id","isMDXComponent","PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","aria-label","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","featuredImage","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils"],"mappings":"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","file":"component---src-pages-things-to-do-in-texas-index-mdx-f7e625c39cbd9bada0ae.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/tbird/code/gatsby/tstg22/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst Row = makeShortcode(\"Row\");\nconst Column = makeShortcode(\"Column\");\nconst SimpleSearch = makeShortcode(\"SimpleSearch\");\nconst AdGroup = makeShortcode(\"AdGroup\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Search all listings in the Texas State Travel Guide. `}</p>\n    </PageDescription>\n    <Row mdxType=\"Row\">\n      <Column colSm={6} colMd={4} colLg={8} mdxType=\"Column\">\n        <p>{`Try a city name, like “Austin,” or an attraction name, like “State Capitol Complex”`}</p>\n        <SimpleSearch mdxType=\"SimpleSearch\" />\n      </Column>\n      <Column colSm={6} colMd={4} colLg={4} mdxType=\"Column\">\n        <AdGroup id={['ad32', 'ad09', 'ad37', 'ad90', 'ad04', 'ad23', 'ad33', 'ad36', 'ad61', 'ad74', 'ad78', 'ad79', 'ad81', 'ad92', 'ad34', 'ad70', 'ad84', 'ad72', 'ad80', 'ad15', 'ad75', 'ad20', 'ad45', 'ad41', 'ad06', 'ad40', 'ad28', 'ad29', 'ad91', 'ad82', 'ad77', 'ad76', 'ad83', 'ad46', 'ad54', 'ad55', 'ad56', 'ad49', 'ad57', 'ad38', 'ad43', 'ad13', 'ad18', 'ad02']} mdxType=\"AdGroup\" />\n        <AdGroup id={['ad32', 'ad09', 'ad37', 'ad90', 'ad04', 'ad23', 'ad33', 'ad36', 'ad61', 'ad74', 'ad78', 'ad79', 'ad81', 'ad92', 'ad34', 'ad70', 'ad84', 'ad72', 'ad80', 'ad15', 'ad75', 'ad20', 'ad45', 'ad41', 'ad06', 'ad40', 'ad28', 'ad29', 'ad91', 'ad82', 'ad77', 'ad76', 'ad83', 'ad46', 'ad54', 'ad55', 'ad56', 'ad49', 'ad57', 'ad38', 'ad43', 'ad13', 'ad18', 'ad02']} mdxType=\"AdGroup\" />\n        <AdGroup id={['ad32', 'ad09', 'ad37', 'ad90', 'ad04', 'ad23', 'ad33', 'ad36', 'ad61', 'ad74', 'ad78', 'ad79', 'ad81', 'ad92', 'ad34', 'ad70', 'ad84', 'ad72', 'ad80', 'ad15', 'ad75', 'ad20', 'ad45', 'ad41', 'ad06', 'ad40', 'ad28', 'ad29', 'ad91', 'ad82', 'ad77', 'ad76', 'ad83', 'ad46', 'ad54', 'ad55', 'ad56', 'ad49', 'ad57', 'ad38', 'ad43', 'ad13', 'ad18', 'ad02']} mdxType=\"AdGroup\" />\n      </Column>\n    </Row>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from 'gatsby-theme-carbon/src/components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from 'gatsby-theme-carbon/src/components/PageHeader';\nimport EditLink from 'gatsby-theme-carbon/src/components/EditLink';\nimport NextPrevious from 'gatsby-theme-carbon/src/components/NextPrevious';\nimport PageTabs from 'gatsby-theme-carbon/src/components/PageTabs';\nimport Main from 'gatsby-theme-carbon/src/components/Main';\nimport useMetadata from 'gatsby-theme-carbon/src/util/hooks/useMetadata';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    featuredImage,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query SHADOW_PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}\n      featuredImage={featuredImage}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n"],"sourceRoot":""}